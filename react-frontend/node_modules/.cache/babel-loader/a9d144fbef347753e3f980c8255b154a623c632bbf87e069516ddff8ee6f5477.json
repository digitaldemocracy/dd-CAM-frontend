{"ast":null,"code":"var _jsxFileName = \"/Users/lukeaitchison/StatusTesting/react-frontend/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOMClient from \"react-dom/client\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyApp() {\n  _s();\n  const [lines, setLines] = useState([]);\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.readAsText(\"config\");\n    setLines(reader.result);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"readfile(config)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n  function readFile(fileName) {\n    e.preventDefault();\n    const reader = new FileReader();\n  }\n}\n\n// Create the container\n_s(MyApp, \"rXCgyOSha7nD7LaunrnbH7EjheQ=\");\n_c = MyApp;\nconst container = document.getElementById(\"root\");\n\n// Create a root\nconst root = ReactDOMClient.createRoot(container);\n\n// Initial render: Render an element to the Root\nroot.render( /*#__PURE__*/_jsxDEV(MyApp, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOMClient","jsxDEV","_jsxDEV","MyApp","_s","lines","setLines","reader","FileReader","readAsText","result","children","fileName","_jsxFileName","lineNumber","columnNumber","readFile","e","preventDefault","_c","container","document","getElementById","root","createRoot","render","$RefreshReg$"],"sources":["/Users/lukeaitchison/StatusTesting/react-frontend/src/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOMClient from \"react-dom/client\";\nimport \"./index.css\";\n\n\n\n\n\nfunction MyApp() {\n  const [lines, setLines] = useState([])\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.readAsText(\"config\");\n    setLines(reader.result);\n\n  }, [] );\n  return (\n    <div>\n      <h1>readfile(config)</h1>\n    </div>\n  );\n\n  function readFile(fileName) {\n    e.preventDefault()\n    const reader = new FileReader()\n    \n  }\n}\n\n// Create the container\nconst container = document.getElementById(\"root\");\n\n// Create a root\nconst root = ReactDOMClient.createRoot(container);\n\n// Initial render: Render an element to the Root\nroot.render(<MyApp />);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMrB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtCD,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,UAAU,CAAC,QAAQ,CAAC;IAC3BH,QAAQ,CAACC,MAAM,CAACG,MAAM,CAAC;EAEzB,CAAC,EAAE,EAAG,CAAC;EACP,oBACER,OAAA;IAAAS,QAAA,eACET,OAAA;MAAAS,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;EAGR,SAASC,QAAQA,CAACJ,QAAQ,EAAE;IAC1BK,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMX,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;EAEjC;AACF;;AAEA;AAAAJ,EAAA,CArBSD,KAAK;AAAAgB,EAAA,GAALhB,KAAK;AAsBd,MAAMiB,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;;AAEjD;AACA,MAAMC,IAAI,GAAGvB,cAAc,CAACwB,UAAU,CAACJ,SAAS,CAAC;;AAEjD;AACAG,IAAI,CAACE,MAAM,eAACvB,OAAA,CAACC,KAAK;EAAAS,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAI,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}