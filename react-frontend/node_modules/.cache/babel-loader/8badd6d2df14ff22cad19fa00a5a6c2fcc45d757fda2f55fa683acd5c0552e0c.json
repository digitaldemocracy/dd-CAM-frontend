{"ast":null,"code":"var _jsxFileName = \"/Users/lukeaitchison/StatusTesting/react-frontend/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOMClient from \"react-dom/client\";\nimport \"./index.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyApp() {\n  _s();\n  const [config, setConfig] = useState({});\n  useEffect(() => {\n    fetchConfig().then(result => {\n      if (result) setConfig(result);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: config[\"daily\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n// Create the container\n_s(MyApp, \"IJYATpt50mJOvfVdU7yqc9CVBkI=\");\n_c = MyApp;\nconst container = document.getElementById(\"root\");\n\n// Create a root\nconst root = ReactDOMClient.createRoot(container);\nasync function fetchConfig() {\n  try {\n    const response = await axios.get('http://localhost:5001/config/config.json');\n    return JSON.stringify(response.data);\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n}\n\n// Initial render: Render an element to the Root\nroot.render( /*#__PURE__*/_jsxDEV(MyApp, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOMClient","axios","jsxDEV","_jsxDEV","MyApp","_s","config","setConfig","fetchConfig","then","result","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","container","document","getElementById","root","createRoot","response","get","JSON","stringify","data","error","console","log","render","$RefreshReg$"],"sources":["/Users/lukeaitchison/StatusTesting/react-frontend/src/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOMClient from \"react-dom/client\";\nimport \"./index.css\";\nimport axios from 'axios';\n\nfunction MyApp() {\n  const [config, setConfig] = useState({});\n\n  useEffect(() => {\n    fetchConfig().then( result => {\n       if (result)\n          setConfig(result);\n     });\n  }, [] );\n  return (\n    <div>\n      <h1>{config[\"daily\"]}</h1>\n    </div>\n  );\n}\n\n// Create the container\nconst container = document.getElementById(\"root\");\n\n// Create a root\nconst root = ReactDOMClient.createRoot(container);\n\nasync function fetchConfig(){\n  try {\n     const response = await axios.get('http://localhost:5001/config/config.json');\n     return JSON.stringify(response.data);     \n  }\n  catch (error){\n     console.log(error); \n     return false;         \n  }\n}\n\n// Initial render: Render an element to the Root\nroot.render(<MyApp />);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,aAAa;AACpB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdU,WAAW,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAI;MAC3B,IAAIA,MAAM,EACPH,SAAS,CAACG,MAAM,CAAC;IACtB,CAAC,CAAC;EACL,CAAC,EAAE,EAAG,CAAC;EACP,oBACEP,OAAA;IAAAQ,QAAA,eACER,OAAA;MAAAQ,QAAA,EAAKL,MAAM,CAAC,OAAO;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV;;AAEA;AAAAV,EAAA,CAhBSD,KAAK;AAAAY,EAAA,GAALZ,KAAK;AAiBd,MAAMa,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;;AAEjD;AACA,MAAMC,IAAI,GAAGpB,cAAc,CAACqB,UAAU,CAACJ,SAAS,CAAC;AAEjD,eAAeT,WAAWA,CAAA,EAAE;EAC1B,IAAI;IACD,MAAMc,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,0CAA0C,CAAC;IAC5E,OAAOC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAACI,IAAI,CAAC;EACvC,CAAC,CACD,OAAOC,KAAK,EAAC;IACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO,KAAK;EACf;AACF;;AAEA;AACAP,IAAI,CAACU,MAAM,eAAC3B,OAAA,CAACC,KAAK;EAAAQ,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAC,EAAA;AAAAe,YAAA,CAAAf,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}