{"ast":null,"code":"var _jsxFileName = \"/Users/lukeaitchison/StatusTesting/react-frontend/src/Table.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TableHeader() {\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"File_Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Run Frequency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Last Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = TableHeader;\nfunction getFreq(fileName, config) {\n  var currentElement = \"\";\n  Object.keys(config).forEach(element => {\n    if (config[element].includes(fileName.slice(0, -4))) {\n      currentElement = element;\n    }\n  });\n  return currentElement;\n}\nfunction TableBody(props) {\n  const rows = Object.keys(props.logs).map((row, index) => {\n    if (getFreq(row, props.config) === props.filter || props.filter === \"\") {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/fullLog/\".concat(row),\n            children: row.slice(0, -4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getFreq(row, props.config)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: props.logs[row][2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: props.logs[row][0] === \"ERROR\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"type2-icon\",\n            alt: \"ERROR\",\n            src: \"/errorIcon.jpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"type2-icon\",\n            alt: \"SUCCESS\",\n            src: \"/successIcon.jpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 134\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, row, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_c2 = TableBody;\nfunction Table(props) {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(TableHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      logs: props.logs,\n      config: props.config,\n      filter: props.filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_c3 = Table;\nexport default Table;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TableHeader\");\n$RefreshReg$(_c2, \"TableBody\");\n$RefreshReg$(_c3, \"Table\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","TableHeader","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","getFreq","config","currentElement","Object","keys","forEach","element","includes","slice","TableBody","props","rows","logs","map","row","index","filter","to","concat","className","alt","src","_c2","Table","_c3","$RefreshReg$"],"sources":["/Users/lukeaitchison/StatusTesting/react-frontend/src/Table.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\n\n\nfunction TableHeader() {\n    return (\n        <thead>\n          <tr>\n            <th>File_Name</th>\n            <th>Run Frequency</th>\n            <th>Last Run</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n    );  \n}\n\nfunction getFreq(fileName, config) {\n    var currentElement = \"\"\n    Object.keys(config).forEach(element => {\n        if (config[element].includes(fileName.slice(0, -4))) {\n            currentElement = element;\n        }\n    });\n    return currentElement;\n}\n\nfunction TableBody(props) {\n    const rows = Object.keys(props.logs).map((row, index) => {\n        if (getFreq(row, props.config) === props.filter || props.filter === \"\") {\n            return (\n                <tr key = {row}>\n                    <td>\n                        <Link to = {\"/fullLog/\".concat(row)}>\n                            {row.slice(0, -4)}\n                        </Link>\n                    </td>\n                    <td>{getFreq(row, props.config)}</td>\n                    <td>{props.logs[row][2]}</td>\n                    <td>\n                        {\n                            props.logs[row][0] === \"ERROR\" ? <img className = \"type2-icon\" alt = \"ERROR\" src = \"/errorIcon.jpeg\"/> : <img className = \"type2-icon\" alt = \"SUCCESS\" src = \"/successIcon.jpeg\"/>\n                        }\n                    </td>\n                </tr>\n            )\n        }\n        return <tr></tr>;\n\n    });\n    return (\n        <tbody>\n          {rows}\n         </tbody>\n     );\n}\n\nfunction Table(props) {\n    return (\n        <table>\n            <TableHeader />\n            <TableBody logs = {props.logs} config = {props.config} filter = {props.filter}/>\n        </table>\n    );\n}\n\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}