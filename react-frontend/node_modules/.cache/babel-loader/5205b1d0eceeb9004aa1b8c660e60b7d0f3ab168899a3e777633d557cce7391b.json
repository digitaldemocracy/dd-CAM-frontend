{"ast":null,"code":"var _jsxFileName = \"/Users/lukeaitchison/StatusTesting/react-frontend/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOMClient from \"react-dom/client\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyApp() {\n  _s();\n  useEffect(() => {\n    const fs = require(\"fs\");\n    fs.readFile(\"config\", \"utf8\", (err, data) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n      console.log(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"File contents: \", lines]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n// Create the container\n_s(MyApp, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MyApp;\nconst container = document.getElementById(\"root\");\n\n// Create a root\nconst root = ReactDOMClient.createRoot(container);\n\n// Initial render: Render an element to the Root\nroot.render( /*#__PURE__*/_jsxDEV(MyApp, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOMClient","jsxDEV","_jsxDEV","MyApp","_s","fs","require","readFile","err","data","console","log","children","lines","fileName","_jsxFileName","lineNumber","columnNumber","_c","container","document","getElementById","root","createRoot","render","$RefreshReg$"],"sources":["/Users/lukeaitchison/StatusTesting/react-frontend/src/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOMClient from \"react-dom/client\";\nimport \"./index.css\";\n\n\n\n\n\nfunction MyApp() {\n  useEffect(() => {\n    const fs = require(\"fs\");\n    fs.readFile(\"config\", \"utf8\", (err, data) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n      console.log(data);\n    });\n\n\n  }, [] );\n  return (\n    <div>\n      <h1>File contents: {lines}</h1>\n    </div>\n  );\n}\n\n// Create the container\nconst container = document.getElementById(\"root\");\n\n// Create a root\nconst root = ReactDOMClient.createRoot(container);\n\n// Initial render: Render an element to the Root\nroot.render(<MyApp />);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMrB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACfN,SAAS,CAAC,MAAM;IACd,MAAMO,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;IACxBD,EAAE,CAACE,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE,CAACC,GAAG,EAAEC,IAAI,KAAK;MAC3C,IAAID,GAAG,EAAE;QACPE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;QAChB;MACF;MACAE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;EAGJ,CAAC,EAAE,EAAG,CAAC;EACP,oBACEP,OAAA;IAAAU,QAAA,eACEV,OAAA;MAAAU,QAAA,GAAI,iBAAe,EAACC,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV;;AAEA;AAAAb,EAAA,CApBSD,KAAK;AAAAe,EAAA,GAALf,KAAK;AAqBd,MAAMgB,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;;AAEjD;AACA,MAAMC,IAAI,GAAGtB,cAAc,CAACuB,UAAU,CAACJ,SAAS,CAAC;;AAEjD;AACAG,IAAI,CAACE,MAAM,eAACtB,OAAA,CAACC,KAAK;EAAAW,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAC,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}