{"ast":null,"code":"var _jsxFileName = \"/Users/lukeaitchison/StatusTesting/react-frontend/src/Table.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TableHeader() {\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"File_Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Run Frequency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = TableHeader;\nfunction getFreq(fileName, config) {\n  Object.keys(config).forEach(element => {\n    if (config[element].includes(fileName.slice(0, -4))) {\n      return element;\n    }\n  });\n}\nfunction TableBody(props) {\n  const rows = Object.keys(props.logs).map((row, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: getFreq(row, props.config)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: props.logs[row]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, row, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_c2 = TableBody;\nfunction Table(props) {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(TableHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      logs: props.logs,\n      config: props.config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_c3 = Table;\nexport default Table;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TableHeader\");\n$RefreshReg$(_c2, \"TableBody\");\n$RefreshReg$(_c3, \"Table\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TableHeader","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","getFreq","config","Object","keys","forEach","element","includes","slice","TableBody","props","rows","logs","map","row","index","_c2","Table","_c3","$RefreshReg$"],"sources":["/Users/lukeaitchison/StatusTesting/react-frontend/src/Table.js"],"sourcesContent":["import React from 'react'\n\nfunction TableHeader() {\n    return (\n        <thead>\n          <tr>\n            <th>File_Name</th>\n            <th>Run Frequency</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n    );  \n}\n\nfunction getFreq(fileName, config) {\n    Object.keys(config).forEach(element => {\n        if (config[element].includes(fileName.slice(0, -4))) {\n            return element;\n        }\n    });\n}\n\nfunction TableBody(props) {\n    const rows = Object.keys(props.logs).map((row, index) => {\n        return (\n            <tr key = {row}>\n                <td>{row}</td>\n                <td>{getFreq(row, props.config)}</td>\n                <td>{props.logs[row]}</td>\n            </tr>\n        )\n\n    });\n    return (\n        <tbody>\n          {rows}\n         </tbody>\n     );\n}\n\nfunction Table(props) {\n    return (\n        <table>\n            <TableHeader />\n            <TableBody logs = {props.logs} config = {props.config}/>\n        </table>\n    );\n}\n\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}